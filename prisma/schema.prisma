generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                    String     @id @default(cuid())
  email                 String     @unique
  name                  String?
  surname               String?
  phone                 String?
  password              String
  salt                  String
  last_login_ip_address String
  current_logged_in_at  DateTime   @default(now())
  last_logged_in_at     DateTime   @default(now())
  created_at            DateTime   @default(now())
  is_admin              Boolean    @default(false)
  is_item_owner         Boolean    @default(false)
  items                 Items[]    @relation("ItemOwner")
  bookmarks             Bookmark[]
  media_files           Media[]    @relation("UserMedia")
}

model Items {
  id             String            @id @default(cuid())
  title          String
  description    String
  price          Float
  address        String
  city           String
  district       String
  bedroom_count  Int
  bathroom_count Int
  size           Float
  year_built     Int
  fixtures       String
  status         String            @default("active")
  item_category  ItemsCategories[]
  for_sale       Boolean           @default(true)
  latitude       Float
  longitude      Float
  created_at     DateTime          @default(now())
  updated_at     DateTime          @updatedAt
  owner_id       String
  owner          User              @relation("ItemOwner", fields: [owner_id], references: [id])
  images         Media[]
  bookmarks      Bookmark[]
}

model ItemsCategories {
  id    String  @id @default(cuid())
  name  String
  items Items[]
}

model Media {
  id         String   @id @default(cuid())
  name       String
  path       String
  item_id    String?
  items      Items?   @relation(fields: [item_id], references: [id])
  user_id    String
  user       User     @relation("UserMedia", fields: [user_id], references: [id])
  created_at DateTime @default(now())
}

model Bookmark {
  id         String   @id @default(cuid())
  user_id    String
  item_id    String
  user       User     @relation(fields: [user_id], references: [id])
  items      Items    @relation(fields: [item_id], references: [id])
  created_at DateTime @default(now())
}

model Menu {
  id         String   @id @default(cuid())
  title      String
  active     Boolean  @default(true)
  slug       String
  parent_id  String?
  parent     Menu?    @relation("ChildMenu", fields: [parent_id], references: [id])
  children   Menu[]   @relation("ChildMenu")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Pages {
  id               String         @id @default(cuid())
  title            String
  slug             String         @unique
  description      String?
  status           String // Draft, Published, Archived, etc.
  created_at       DateTime       @default(now())
  updated_at       DateTime       @updatedAt
  meta_title       String?
  meta_description String?
  meta_keywords    String?
  page_sections    PageSections[] @relation("PageSections")
}

model PageSections {
  id             String   @id @default(cuid())
  title          String
  component_name String   @default("DefaultComponent")
  body           String
  display_order  Int
  preview_image  String?
  custom_fields  String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
  pages          Pages[]  @relation("PageSections")
}

model Contact {
  id         String   @id @default(cuid())
  name       String
  email      String
  phone      String
  message    String
  created_at DateTime @default(now())
}

model Settings {
  id                        String   @id @default(cuid())
  business_name             String
  business_logo             String
  business_email            String
  business_phone            String
  business_address          String
  business_description      String
  business_meta_title       String
  business_meta_description String
  business_meta_keywords    String
  business_facebook         String?
  business_twitter          String?
  business_instagram        String?
  business_linkedin         String?
  business_youtube          String?
  business_whatsapp         String?
  business_pinterest        String?
  business_tiktok           String?
  business_snapchat         String?
  business_github           String?
  business_google           String?
  location_latitude         Float?
  location_longitude        Float?
  location_zoom             Int?
  currency                  String   @default("USD")
  currency_symbol           String   @default("$")
  timezone                  String   @default("UTC")
  allow_agent_registration  Boolean  @default(true)
  updated_at                DateTime @updatedAt
}

model Cities {
  id        String      @id @default(cuid())
  name      String
  districts Districts[]
}

model Districts {
  id      String @id @default(cuid())
  name    String
  city_id String
  city    Cities @relation(fields: [city_id], references: [id])
}
